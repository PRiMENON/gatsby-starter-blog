{"version":3,"file":"component---src-pages-404-js-79711f5dff7afbb7ed1b.js","mappings":"uJAmCA,IAhCe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEA,sBAAIG,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKP,IAKhB,gBAAC,EAAAM,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCP,GAML,uBAAKK,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,4BAAOH,GACP,oCACK,IAAIO,MAAOC,cAAa,mBAE3B,qBAAGC,KAAK,4BAA0B,WAEhC,C,yDCnBV,MAAMC,EAAM,IAAgD,IAAD,sBAA9C,YAAEC,EAAW,MAAEZ,EAAK,SAAEC,EAAQ,QAAEY,GAAS,EACpD,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAiB1B,SAAEZ,IAAaa,EAAAA,EAAAA,eACfC,EAAkBL,GAAeE,EAAKI,aAAaN,YACnDO,EAAgC,QAApB,EAAGL,EAAKI,oBAAY,aAAjB,EAAmBlB,MAClCoB,GAAyB,QAAjB,EAAAN,EAAKI,oBAAY,aAAjB,EAAmBG,SAAO,KAA0B,QAApB,EAAGP,EAAKI,oBAAY,aAAjB,EAAmBE,OAC9DC,GAA2B,QAAjB,EAAAP,EAAKI,oBAAY,aAAjB,EAAmBG,SAAUlB,IAA6B,QAArB,EAAIW,EAAKI,oBAAY,aAAjB,EAAmBG,SACtEC,EAAST,EAAU,UAAY,UACrC,OACE,gCACE,6BAAQM,EAAkBnB,EAAK,MAAMmB,EAAiBnB,GACtD,wBAAMuB,KAAK,cAAcC,QAASP,IAClC,wBAAMQ,SAAS,WAAWD,QAASL,EAAkBnB,EAAK,MAAMmB,EAAiBnB,IACjF,wBAAMyB,SAAS,eAAeD,QAASL,IACvC,wBAAMM,SAAS,iBAAiBD,QAASP,IACzC,wBAAMQ,SAAS,UAAUD,QAASF,IAClC,wBAAMG,SAAS,WAAWD,QAASJ,GAAK,KACxC,wBAAMG,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,eAAeC,SAA0B,QAAjB,EAAAV,EAAKI,oBAAY,OAAQ,QAAR,EAAjB,EAAmBQ,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KACrE,wBAAMJ,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAV,EAAKI,oBAAY,OAAQ,QAAR,EAAjB,EAAmBQ,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KACxE,wBAAMJ,KAAK,cAAcC,QAASH,IAClC,wBAAME,KAAK,gBAAgBC,QAASxB,IACpC,wBAAMuB,KAAK,sBAAsBC,QAASP,IAC1C,wBAAMM,KAAK,gBAAgBC,QAASJ,GAAK,KACxCnB,EACA,EAIPU,EAAIiB,aAAe,CACjBf,SAAS,GAOX,K,kGC3DA,MAWagB,EAAO,IAAM,gBAAC,IAAG,CAAC7B,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAE8B,EAAI,SAAE/B,GAAU,EACtC,MAAMgC,EAAYD,EAAKhB,KAAKI,aAAalB,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAO+B,GACjC,4CACA,oFACO,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { useLocation } from \"@reach/router\"\r\nimport propTypes from \"prop-types\"\r\n\r\nconst Seo = ({ description, title, children, topFlag }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            siteUrl\r\n            image\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n  const { pathname } = useLocation()\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n  const image = site.siteMetadata?.siteUrl + `/` + site.siteMetadata?.image\r\n  const siteUrl = site.siteMetadata?.siteUrl + pathname || site.siteMetadata?.siteUrl\r\n  const ogType = topFlag ? \"website\" : \"article\"\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={defaultTitle ? `${title} | ${defaultTitle}` : title} />\r\n      <meta property=\"og:site_name\" content={defaultTitle} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content={ogType} />\r\n      <meta property=\"og:image\" content={image || ``} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:site\" content={site.siteMetadata?.social?.twitter || ``} />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.social?.twitter || ``} />\r\n      <meta name=\"twitter:url\" content={siteUrl} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      <meta name=\"twitter:image\" content={image || ``} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  topFlag: false,\r\n}\r\n\r\nSeo.propTypes = {\r\n  topFlag: propTypes.bool,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["location","title","children","isRootPath","pathname","header","className","Link","to","Date","getFullYear","href","Seo","description","topFlag","site","useStaticQuery","useLocation","metaDescription","siteMetadata","defaultTitle","image","siteUrl","ogType","name","content","property","social","twitter","defaultProps","Head","data","siteTitle"],"sourceRoot":""}